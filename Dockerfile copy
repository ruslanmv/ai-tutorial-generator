# ──────────────────────────────────────────────────────────────────────────────
# Dockerfile · AI Tutorial Generator
# ──────────────────────────────────────────────────────────────────────────────
# Build a lean container that can:
#   • parse PDFs/HTML with Docling   (needs poppler / ghostscript)
#   • talk to an external LLM (Watson x) or a local Ollama daemon
#
# The image **does not** run Ollama itself; point OLLAMA_BASE_URL at
# another container or host running `ollama serve`.
# ------------------------------------------------------------------------------

FROM python:3.12-slim AS runtime

# ──────────────────────────────────────────────────────────────────────────────
# Environment
# ──────────────────────────────────────────────────────────────────────────────
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    DOCLING_OUTPUT_DIR=/app/docling_output \
    FLASK_ENV=production \
    FLASK_APP=app.py \
    PORT=8000                       \
    LLM_BACKEND=${LLM_BACKEND:-ollama}

# ──────────────────────────────────────────────────────────────────────────────
# System dependencies
#   • build-essential   – for wheels that require a compile step
#   • poppler‑utils     – pdfimages / pdftotext used by Docling
#   • ghostscript       – fallback PDF rasteriser
# ---------------------------------------------------------------------------
RUN apt-get update &&  \
    apt-get install -y --no-install-recommends \
        build-essential \
        poppler-utils   \
        ghostscript     \
        curl            \
    && rm -rf /var/lib/apt/lists/*

# ──────────────────────────────────────────────────────────────────────────────
# Python deps
# ──────────────────────────────────────────────────────────────────────────────
WORKDIR /app
COPY requirements.txt .
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# ──────────────────────────────────────────────────────────────────────────────
# Project files
# ──────────────────────────────────────────────────────────────────────────────
COPY . .

# Ensure Docling has somewhere to write intermediate files
RUN mkdir -p "${DOCLING_OUTPUT_DIR}"

# ──────────────────────────────────────────────────────────────────────────────
# Runtime
# ──────────────────────────────────────────────────────────────────────────────
EXPOSE ${PORT}

# A lightweight production server (can swap with gunicorn if desired)
CMD ["python", "app.py"]
